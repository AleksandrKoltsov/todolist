{"version":3,"sources":["context.js","components/TodoItem.js","components/TodoList.js","components/AddTodo.js","App.js","index.js"],"names":["Context","React","createContext","TodoItem","list","index","onChange","removeTodo","useContext","classes","completed","push","className","join","type","checked","id","for","title","onClick","TodoList","props","map","item","i","key","onToggle","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","target","App","setList","Provider","filter","concat","Date","now","length","ReactDOM","render","document","getElementById"],"mappings":"sJAGeA,EADCC,IAAMC,gBC2BPC,MA1Bf,YAA6C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACtBC,EAAcC,qBAAWR,GAAzBO,WACDE,EAAU,GAKhB,OAHGL,EAAKM,WACJD,EAAQE,KAAK,QAGb,4BACI,0BAAMC,UAAWH,EAAQI,KAAK,MAC1B,2BACIC,KAAK,WACLC,QAASX,EAAKM,UACdJ,SAAU,kBAAMA,EAASF,EAAKY,KAC9BA,GAAIX,IAGR,gCAASA,EAAQ,GARrB,WAUI,2BAAOY,IAAKZ,GAAQD,EAAKc,QAE7B,4BAAQN,UAAU,KAAKO,QAAS,kBAAMZ,EAAWH,EAAKY,MAAtD,UCHGI,MAlBf,SAAkBC,GACd,OACI,4BACKA,EAAMjB,KAAKkB,KAAI,SAACC,EAAMC,GACnB,OAAO,kBAAC,EAAD,CACKpB,KAAQmB,EACRE,IAAOF,EAAKP,GACZX,MAASmB,EACTlB,SAAUe,EAAMK,gBCe7BC,MAxBf,YAAgC,IAAbC,EAAY,EAAZA,SAAY,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAW3B,OACI,0BAAMnB,UAAU,cAAcoB,SATlC,SAAuBC,GACnBA,EAAMC,iBACHJ,EAAMK,SACLP,EAASE,GACTC,EAAS,OAMT,2BACIjB,KAAK,OACLgB,MAAOA,EACPxB,SAAU,SAAA2B,GAAK,OAAIF,EAASE,EAAMG,OAAON,QACzClB,UAAU,aAEd,4BAAQE,KAAK,SAASF,UAAU,UAAhC,SCuBGyB,MAtCf,WAAgB,IAAD,EACWpC,IAAM4B,SAAS,IAD1B,mBACNzB,EADM,KACAkC,EADA,KA0Bb,OACI,kBAAC,EAAQC,SAAT,CAAkBT,MAAS,CAAEvB,WAbjC,SAAoBS,GAClBsB,EAAQlC,EAAKoC,QAAO,SAAAjB,GAAI,OAAIA,EAAKP,KAAOA,SAapC,yBAAKJ,UAAU,WACX,0CACA,kBAAC,EAAD,CAASgB,SAZnB,SAAiBV,GACboB,EAAQlC,EAAKqC,OAAO,CAAC,CACjBvB,MAAOA,EACPF,GAAI0B,KAAKC,MACTjC,WAAW,SASRN,EAAKwC,OAAS,kBAAC,EAAD,CAAUxC,KAAQA,EAAMsB,SA5BjD,SAAoBV,GACjBsB,EACIlC,EAAKkB,KAAI,SAAAC,GAIR,OAHGA,EAAKP,KAAOA,IACXO,EAAKb,WAAaa,EAAKb,WAEpBa,SAsB4D,uBAAGX,UAAU,UAAb,eChC7EiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0dde8638.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\nexport default Context;","import React, { useContext } from \"react\";\r\nimport Context from \"../context\";\r\n\r\nfunction TodoItem({ list, index, onChange}) { //получаю список в качестве параметра\r\n    const {removeTodo} = useContext(Context);\r\n    const classes = [];\r\n\r\n    if(list.completed){ //определяю состояние тудушки\r\n        classes.push('done'); //если тру то добавляю имя класса в массив (для возможности добавления других классов)\r\n    }\r\n    return (\r\n        <li>\r\n            <span className={classes.join(' ')}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={list.completed} //привязка чекбокса к сосотоянию списка\r\n                    onChange={() => onChange(list.id)} //клик по чекбоксу\r\n                    id={index}\r\n                />\r\n\r\n                <strong>{index + 1}</strong>\r\n                &nbsp;&nbsp;\r\n                <label for={index}>{list.title}</label>\r\n            </span>\r\n            <button className='rm' onClick={() => removeTodo(list.id)}>&times;</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList(props) { //получаю список в качестве параметра\r\n    return (\r\n        <ul>\r\n            {props.list.map((item, i) =>{ //обрабатываю массив списка\r\n                return <TodoItem\r\n                            list = {item}\r\n                            key = {item.id}\r\n                            index = {i}\r\n                            onChange={props.onToggle}\r\n                />; //возвращаю элемент в виде компонента\r\n                // список и\r\n                // указываю дополнительный специальный параметр key с уникальным идентификатором для итерируемого\r\n                // объектав в реакте\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from \"react\";\r\n\r\nfunction AddTodo({ onCreate }) {\r\n    const [value, setValue] = useState('');\r\n    \r\n    function submitHandler(event) { //обработка кнопки AddTodo\r\n        event.preventDefault(); //отменяем стандарное действие submit(перегружает страницу)\r\n        if(value.trim()){ //валидация input\r\n            onCreate(value);\r\n            setValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='formAddTodo' onSubmit={submitHandler}>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={event => setValue(event.target.value)}\r\n                className='addInput'\r\n            />\r\n            <button type='submit' className='addBtn'>Add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddTodo;","import React from 'react';\nimport TodoList from \"./components/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./components/AddTodo\";\n\n\nfunction App() {\n  const [list, setList] = React.useState([]);\n\n  function toggleTodo(id) { //метод для переключения чекбокса\n     setList(\n         list.map(item => {\n          if(item.id === id) {\n              item.completed = !item.completed;\n          }\n          return item;\n      })\n    )\n  }\n\n  function removeTodo(id){ //удаляет строку\n    setList(list.filter(item => item.id !== id));\n  }\n\n  function addTodo(title) { //добавляю новую запись\n      setList(list.concat([{\n          title: title,\n          id: Date.now(), //использую дату как уникальный идетнтификатор\n          completed: false\n      }]))\n  }\n\n  return (\n      <Context.Provider value = {{ removeTodo }}>\n        <div className=\"wrapper\">\n            <h1>ToDo List:</h1>\n            <AddTodo onCreate={addTodo}/>\n            {list.length ? <TodoList list = {list} onToggle={toggleTodo}/> : <p className='noTodo'>No ToDo!</p>}\n\n        </div>\n      </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}